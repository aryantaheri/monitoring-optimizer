<?xml version="1.0" encoding="UTF-8"?>
<solver>
  <!-- <environmentMode>FAST_ASSERT</environmentMode>  -->

  <!-- Domain model configuration -->
  <solutionClass>no.uis.ux.cipsi.net.monitoringbalancing.domain.MonitoringBalance</solutionClass>
  <entityClass>no.uis.ux.cipsi.net.monitoringbalancing.domain.TrafficFlow</entityClass>

  <!-- Score configuration -->
  <scoreDirectorFactory>
    <scoreDefinitionType>HARD_SOFT</scoreDefinitionType>
    <easyScoreCalculatorClass>no.uis.ux.cipsi.net.monitoringbalancing.solver.score.MonitoringBalancingEasyScoreCalculator</easyScoreCalculatorClass>
    <!--<easyScoreCalculatorClass>org.optaplanner.examples.cloudbalancing.solver.score.CloudBalancingMapBasedEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--<incrementalScoreCalculatorClass>org.optaplanner.examples.cloudbalancing.solver.score.CloudBalancingIncrementalScoreCalculator</incrementalScoreCalculatorClass>-->
    <!--<scoreDrl>org/optaplanner/examples/monitoringbalancing/solver/monitoringbalancingScoreRules.drl</scoreDrl> -->
    <initializingScoreTrend>ONLY_DOWN</initializingScoreTrend>
    <!--<assertionScoreDirectorFactory>-->
      <!--<easyScoreCalculatorClass>org.optaplanner.examples.cloudbalancing.solver.score.CloudBalancingMapBasedEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--</assertionScoreDirectorFactory>-->
  </scoreDirectorFactory>

  <!-- Optimization algorithms configuration -->
  <!--<termination>-->
    <!--<secondsSpentLimit>120</secondsSpentLimit>
    <minutesSpentLimit>1</minutesSpentLimit>-->
  <!--</termination>-->
  <termination>
  	<secondsSpentLimit>600</secondsSpentLimit>
  </termination>
  <constructionHeuristic>
    <queuedEntityPlacer>
      <entitySelector id="placerEntitySelector">
      <cacheType>PHASE</cacheType> 
      </entitySelector>
      <cartesianProductMoveSelector>
        <changeMoveSelector>
          <entitySelector mimicSelectorRef="placerEntitySelector"/>
          <valueSelector>
            <variableName>monitoringSwitch</variableName>
          </valueSelector>
        </changeMoveSelector>
        <changeMoveSelector>
          <entitySelector mimicSelectorRef="placerEntitySelector"/>
          <valueSelector>
            <variableName>monitoringHost</variableName>
          </valueSelector>
        </changeMoveSelector>
      </cartesianProductMoveSelector>
    </queuedEntityPlacer>
    
    <!-- 
    <constructionHeuristicType>FIRST_FIT_DECREASING</constructionHeuristicType>
    <changeMoveSelector>
      <entitySelector>
        <filterClass>no.uis.ux.cipsi.net.monitoringbalancing.solver.move.TrafficFlowSelectionFilter</filterClass>
      </entitySelector>
    </changeMoveSelector> -->
  </constructionHeuristic> 
   
  <localSearch>
      <unionMoveSelector>
      <!-- <changeMoveSelector/> 
      <changeMoveSelector>
        <valueSelector>
          <variableName>monitoringSwitch</variableName>
        </valueSelector>
      </changeMoveSelector>
      <changeMoveSelector>
        <valueSelector>
          <variableName>monitoringHost</variableName>
        </valueSelector>
      </changeMoveSelector> -->
      <!-- <swapMoveSelector/>
      <pillarChangeMoveSelector/>
      <pillarSwapMoveSelector/>  --> 
	    <moveListFactory>
	    	<moveListFactoryClass>no.uis.ux.cipsi.net.monitoringbalancing.solver.move.factory.MonitoringChangeMoveFactory</moveListFactoryClass>
	    </moveListFactory>  
    </unionMoveSelector>
    <!--  -->
    <acceptor>
      <entityTabuSize>7</entityTabuSize>
    </acceptor>
    <forager>
      <acceptedCountLimit>1000</acceptedCountLimit>
    </forager>
  </localSearch>
</solver>
